{
  "filename": "yurt-app-manager-dev.md",
  "__html": "<h1>Build and deploy yurt-app-manager</h1>\n<p>In this tutorial, we will show how the yurt-app-manager helps developers to build yurt-app-manager using the source code.</p>\n<h2>create and push yurt-app-manager image</h2>\n<p>Go to OpenYurt root directory:</p>\n<pre><code class=\"language-bash\">$ <span class=\"hljs-built_in\">cd</span> <span class=\"hljs-variable\">$GOPATH</span>/src/github.com/openyurtio/openyurt\n</code></pre>\n<p>You shoud first set global linux environment variables:</p>\n<ul>\n<li><strong>IMAGE_REPO</strong>: which stand for your own image registry for yurt-app-manager</li>\n<li><strong>IMAGE_TAG</strong>: which stand for yurt-app-manager image tag</li>\n</ul>\n<p>For Example:</p>\n<pre><code class=\"language-bash\"><span class=\"hljs-built_in\">export</span> IMAGE_REPO=registry.cn-hangzhou.aliyuncs.com/edge-kubernetes\n<span class=\"hljs-built_in\">export</span> IMAGE_TAG=<span class=\"hljs-string\">\"v0.3.0-\"</span>$(git rev-parse --short HEAD)\n</code></pre>\n<pre><code class=\"language-bash\">make clean\nmake release WHAT=cmd/yurt-app-manager ARCH=amd64 REGION=cn REPO=<span class=\"hljs-variable\">${IMAGE_REPO}</span> GIT_VERSION=<span class=\"hljs-variable\">${IMAGE_TAG}</span>\n</code></pre>\n<p>If everything goes right, we will get <code>${IMAGE_REPO}/yurt-app-manager:${GIT_VERSION}</code> image:</p>\n<pre><code class=\"language-bash\">docker images <span class=\"hljs-variable\">${IMAGE_REPO}</span>/yurt-app-manager:<span class=\"hljs-variable\">${GIT_VERSION}</span>\n</code></pre>\n<p>push yurt-app-manager image to your own registry</p>\n<pre><code class=\"language-bash\">docker push <span class=\"hljs-variable\">${IMAGE_REPO}</span>/yurt-app-manager:<span class=\"hljs-variable\">${GIT_VERSION}</span>\n</code></pre>\n<h2>Create yurt-app-manager yaml files</h2>\n<pre><code class=\"language-bash\">make gen-yaml WHAT=cmd/yurt-app-manager REPO=<span class=\"hljs-variable\">${IMAGE_REPO}</span> GIT_VERSION=<span class=\"hljs-variable\">${IMAGE_TAG}</span>\n</code></pre>\n<p>If everything goes right, we will have a yurt-app-manager.yaml files:</p>\n<pre><code class=\"language-bash\">$ ls _output/yamls\n\nyurt-app-manager.yaml\n</code></pre>\n<h2>install yurt-app-manager operator</h2>\n<pre><code class=\"language-bash\">kubectl apply -f _output/yamls/yurt-app-manager.yaml\n</code></pre>\n<p>The content of the <code>yurt-app-manager.yaml</code> file mainly includes three points:</p>\n<ul>\n<li><strong>NodePool CRD</strong></li>\n<li><strong>UnitedDeployment CRD</strong></li>\n<li><strong>yurtapp-controller-manager Deployment</strong> which installed in <code>kube-system</code> namespaces</li>\n</ul>\n<pre><code class=\"language-bash\">kubectl get pod -n kube-system |grep yurt-app-manager\n</code></pre>\n<h2>How to Use</h2>\n<p>The Examples of NodePool and UnitedDeployment are in <code>config/yurt-app-manager/samples/</code> directory</p>\n",
  "link": "/en-us/docs/tutorial/yurt-app-manager-dev.html",
  "meta": {}
}