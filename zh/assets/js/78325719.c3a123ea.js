"use strict";(self.webpackChunktemp_web=self.webpackChunktemp_web||[]).push([[3465],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function u(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),i=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):u(u({},t),e)),n},d=function(e){var t=i(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=i(n),m=o,b=p["".concat(s,".").concat(m)]||p[m]||c[m]||a;return n?r.createElement(b,u(u({ref:t},d),{},{components:n})):r.createElement(b,u({ref:t},d))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,u=new Array(a);u[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,u[1]=l;for(var i=2;i<a;i++)u[i]=n[i];return r.createElement.apply(null,u)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},5260:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return i},toc:function(){return d},default:function(){return p}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),u=["components"],l={title:"Yurtctl"},s=void 0,i={unversionedId:"best-practices/yurtctl",id:"best-practices/yurtctl",isDocsHomePage:!1,title:"Yurtctl",description:"This tutorial demonstrates how to use yurtctl to install/uninstall OpenYurt.",source:"@site/docs/best-practices/yurtctl.md",sourceDirName:"best-practices",slug:"/best-practices/yurtctl",permalink:"/zh/docs/best-practices/yurtctl",editUrl:"https://github.com/openyurtio/openyurt.io/edit/master/docs/best-practices/yurtctl.md",tags:[],version:"current",lastUpdatedBy:"Peeknut",lastUpdatedAt:1637131172,formattedLastUpdatedAt:"2021/11/17",frontMatter:{title:"Yurtctl"},sidebar:"docs",previous:{title:"Yurt tunnel",permalink:"/zh/docs/best-practices/yurt-tunnel"},next:{title:"Build and deploy",permalink:"/zh/docs/user-manuals/yurt-app-manager/yurt-app-manager-dev"}},d=[{value:"Convert a minikube cluster",id:"convert-a-minikube-cluster",children:[{value:"Test node autonomy",id:"test-node-autonomy",children:[],level:3}],level:2},{value:"Convert a multi-nodes Kubernetes cluster",id:"convert-a-multi-nodes-kubernetes-cluster",children:[],level:2},{value:"Setup Yurttunnel",id:"setup-yurttunnel",children:[],level:2},{value:"Set the path of configuration",id:"set-the-path-of-configuration",children:[],level:2},{value:"Revert/Uninstall OpenYurt",id:"revertuninstall-openyurt",children:[],level:2},{value:"Subcommand",id:"subcommand",children:[{value:"Convert a Kubernetes node to Yurt edge node",id:"convert-a-kubernetes-node-to-yurt-edge-node",children:[],level:3},{value:"Revert an Yurt edge node to Kubernetes node",id:"revert-an-yurt-edge-node-to-kubernetes-node",children:[],level:3}],level:2},{value:"Troubleshooting",id:"troubleshooting",children:[{value:"1. Failure due to pulling image timeout",id:"1-failure-due-to-pulling-image-timeout",children:[],level:3},{value:"2. Adhoc failure recovery",id:"2-adhoc-failure-recovery",children:[],level:3}],level:2}],c={toc:d};function p(e){var t=e.components,n=(0,o.Z)(e,u);return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"This tutorial demonstrates how to use ",(0,a.kt)("inlineCode",{parentName:"p"},"yurtctl")," to install/uninstall OpenYurt.\nPlease refer to the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/openyurtio/openyurt#getting-started"},"Getting Started")," section on the README page to prepare and build binary to ",(0,a.kt)("inlineCode",{parentName:"p"},"_output/bin/yurtctl"),".\nWe assume a minikube cluster (",(0,a.kt)("a",{parentName:"p",href:"https://github.com/kubernetes/minikube/releases/tag/v1.0.0"},"version 1.14 or less"),")\nis installed."),(0,a.kt)("h2",{id:"convert-a-minikube-cluster"},"Convert a minikube cluster"),(0,a.kt)("p",null,"Let us use ",(0,a.kt)("inlineCode",{parentName:"p"},"yurtctl")," to convert a standard Kubernetes cluster to an OpenYurt cluster."),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Run the following command")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"$ _output/bin/yurtctl convert --provider minikube\n")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"yurtctl")," will install all required components and reset the kubelet in the edge node. The output looks like:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"convert.go:148] mark minikube as the edge-node\nconvert.go:178] deploy the yurt controller manager\nconvert.go:190] deploying the yurt-hub and resetting the kubelet service...\nutil.go:137] servant job(yurtctl-servant-convert-minikube) has succeeded\n")),(0,a.kt)("ol",{start:3},(0,a.kt)("li",{parentName:"ol"},"yurt controller manager and yurthub Pods will be up and running in one minute. Let us verify them:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"$ kubectl get deploy yurt-controller-manager -n kube-system\nNAME            READY   UP-TO-DATE   AVAILABLE   AGE\nyurt-ctrl-mgr   1/1     1            1           23h\n$ kubectl get po yurt-hub-minikube -n kube-system\nNAME                READY   STATUS    RESTARTS   AGE\nyurt-hub-minikube   1/1     Running   0          23h\n")),(0,a.kt)("ol",{start:4},(0,a.kt)("li",{parentName:"ol"},"Next, we mark desired edge nodes as autonomous (only pods running on the autonomous edge nodes will be prevented from being evicted during disconnection):")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"$ _output/bin/yurtctl markautonomous\nI0602 14:11:08.610222   89160 markautonomous.go:149] mark minikube-m02 as autonomous\n")),(0,a.kt)("ol",{start:5},(0,a.kt)("li",{parentName:"ol"},"As the minikube cluster only contains one node, the node will be marked as an autonomous edge node. Let us verify this by inspecting the node's labels and annotations:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"$ kubectl describe node | grep Labels -A 5\nLabels:      alibabacloud.com/is-edge-worker=true\n$ kubectl describe node | grep Annotations -A 5\nAnnotations: node.beta.alibabacloud.com/autonomy: true\n")),(0,a.kt)("p",null,"By now, the OpenYurt cluster is ready. Users will not notice any differences compared to native Kubernetes when operating the cluster.\nIf you login to the node, you will find the local cache has been populated:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"$ minikube ssh\n$ ls /etc/kubernetes/cache/kubelet/\nconfigmaps  events  leases  nodes  pods  secrets  services\n")),(0,a.kt)("h3",{id:"test-node-autonomy"},"Test node autonomy"),(0,a.kt)("p",null,'To test if edge node autonomy works as expected, we will simulate a node "offline" scenario.'),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl apply -f-<<EOF\napiVersion: v1\nkind: Pod\nmetadata:\n  name: bbox\nspec:\n  containers:\n  - image: busybox\n    command:\n    - top\n    name: bbox\nEOF\n")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},'Make the edge node "offline" by changing the ',(0,a.kt)("inlineCode",{parentName:"li"},"yurthub"),"'s server-addr to an unreachable address:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"$ minikube ssh\n$ sudo sed -i 's|--server-addr=.*|--server-addr=https://1.1.1.1:1111|' /etc/kubernetes/manifests/yurt-hub.yaml\n")),(0,a.kt)("ol",{start:3},(0,a.kt)("li",{parentName:"ol"},"Now ",(0,a.kt)("inlineCode",{parentName:"li"},"yurthub")," is disconnected from the apiserver and works in offline mode. To verify this, we can do the following:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'$ minikube ssh\n$ curl -s <http://127.0.0.1:10261>\n{\n  "kind": "Status",\n  "metadata": {\n\n  },\n  "status": "Failure",\n  "message": "request( get : /) is not supported when cluster is unhealthy",\n  "reason": "BadRequest",\n  "code": 400\n}\n')),(0,a.kt)("ol",{start:4},(0,a.kt)("li",{parentName:"ol"},"After 40 seconds, the edge node status becomes ",(0,a.kt)("inlineCode",{parentName:"li"},"NotReady"),", but the pod/bbox won't be evicted and keeps running on the node:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"$ kubectl get node && kubectl get po\nNAME       STATUS     ROLES    AGE   VERSION\nminikube   NotReady   master   58m   v1.18.2\nNAME   READY   STATUS    RESTARTS   AGE\nbbox   1/1     Running   0          19m\n")),(0,a.kt)("h2",{id:"convert-a-multi-nodes-kubernetes-cluster"},"Convert a multi-nodes Kubernetes cluster"),(0,a.kt)("p",null,"An OpenYurt cluster may consist of some edge nodes and some nodes in the cloud site.\n",(0,a.kt)("inlineCode",{parentName:"p"},"yurtctl")," allows users to specify a list of cloud nodes that won't be converted."),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Start with a ",(0,a.kt)("a",{parentName:"li",href:"https://cn.aliyun.com/product/kubernetes"},"two-nodes ack cluster"),",")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"$ kubectl get node\nNAME                     STATUS   ROLES    AGE   VERSION\nus-west-1.192.168.0.87   Ready    <none>   19h   v1.14.8-aliyun.1\nus-west-1.192.168.0.88   Ready    <none>   19h   v1.14.8-aliyun.1\n")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"You can convert only one node to edge node(i.e., minikube-m02) by using this command:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"$ _output/bin/yurtctl convert --provider ack --cloud-nodes us-west-1.192.168.0.87\nI0529 11:21:05.835781    9231 convert.go:145] mark us-west-1.192.168.0.87 as the cloud-node\nI0529 11:21:05.861064    9231 convert.go:153] mark us-west-1.192.168.0.88 as the edge-node\nI0529 11:21:05.951483    9231 convert.go:183] deploy the yurt controller manager\nI0529 11:21:05.974443    9231 convert.go:195] deploying the yurt-hub and resetting the kubelet service...\nI0529 11:21:26.075075    9231 util.go:147] servant job(yurtctl-servant-convert-us-west-1.192.168.0.88) has succeeded\n")),(0,a.kt)("ol",{start:3},(0,a.kt)("li",{parentName:"ol"},"Node ",(0,a.kt)("inlineCode",{parentName:"li"},"us-west-1.192.168.0.87")," will be marked as a non-edge node. You can verify this by inspecting its labels:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"$ kubectl describe node us-west-1.192.168.0.87 | grep Labels\nLabels:             openyurt.io/is-edge-worker=false\n")),(0,a.kt)("ol",{start:4},(0,a.kt)("li",{parentName:"ol"},"Same as before, we make desired edge nodes autonomous:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"$ _output/bin/yurtctl markautonomous\nI0602 11:22:05.610222   89160 markautonomous.go:149] mark us-west-1.192.168.0.88 as autonomous\n")),(0,a.kt)("ol",{start:5},(0,a.kt)("li",{parentName:"ol"},"When the OpenYurt cluster contains cloud nodes, yurt controller manager will be deployed on the cloud node (in this case, the node ",(0,a.kt)("inlineCode",{parentName:"li"},"us-west-1.192.168.0.87"),"):")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"$ kubectl get pods -A -o=custom-columns='NAME:.metadata.name,NODE:.spec.nodeName'\nNAME                                               NODE\nyurt-controller-manager-6947f6f748-lxfdx           us-west-1.192.168.0.87\n")),(0,a.kt)("h2",{id:"setup-yurttunnel"},"Setup Yurttunnel"),(0,a.kt)("p",null,"Since version v0.2.0, users can setup the yurttunnel using ",(0,a.kt)("inlineCode",{parentName:"p"},"yurtctl convert"),"."),(0,a.kt)("p",null,"Assume that the origin cluster is a two-nodes minikube cluster:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"$ kubectl get node -o wide\nNAME           STATUS   ROLES    AGE   VERSION   INTERNAL-IP   EXTERNAL-IP   OS-IMAGE           KERNEL-VERSION     CONTAINER-RUNTIME\nminikube       Ready    master   72m   v1.18.3   172.17.0.3    <none>        Ubuntu 20.04 LTS   4.19.76-linuxkit   docker://19.3.8\nminikube-m02   Ready    <none>   71m   v1.18.3   172.17.0.4    <none>        Ubuntu 20.04 LTS   4.19.76-linuxkit   docker://19.3.8\n")),(0,a.kt)("p",null,"Then, by simply running the ",(0,a.kt)("inlineCode",{parentName:"p"},"yurtctl convert")," command with the enabling of the option ",(0,a.kt)("inlineCode",{parentName:"p"},"--deploy-yurttunnel"),",\nyurttunnel servers will be deployed on cloud nodes, and an yurttunnel agent will be deployed on every edge node."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"$ yurtctl convert --deploy-yurttunnel --cloud-nodes minikube --provider minikube\nI0831 12:35:51.719391   77322 convert.go:214] mark minikube as the cloud-node\nI0831 12:35:51.728246   77322 convert.go:222] mark minikube-m02 as the edge-node\nI0831 12:35:51.753830   77322 convert.go:251] the yurt-controller-manager is deployed\nI0831 12:35:51.910440   77322 convert.go:270] yurt-tunnel-server is deployed\nI0831 12:35:51.999384   77322 convert.go:278] yurt-tunnel-agent is deployed\nI0831 12:35:51.999409   77322 convert.go:282] deploying the yurt-hub and resetting the kubelet service...\nI0831 12:36:22.109338   77322 util.go:173] servant job(yurtctl-servant-convert-minikube-m02) has succeeded\nI0831 12:36:22.109368   77322 convert.go:292] the yurt-hub is deployed\n")),(0,a.kt)("p",null,"To verify that the yurttunnel works as expected, please refer to\nthe ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/openyurtio/openyurt/blob/master/docs/tutorial/yurt-tunnel.md"},"yurttunnel tutorial")),(0,a.kt)("h2",{id:"set-the-path-of-configuration"},"Set the path of configuration"),(0,a.kt)("p",null,"Sometimes the configuration of the node may be different. Users can set the path of the kubelet service configuration\nby the option ",(0,a.kt)("inlineCode",{parentName:"p"},"--kubeadm-conf-path"),", which is used by kubelet component to join the cluster on the edge node."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"$ _output/bin/yurtctl convert --kubeadm-conf-path /etc/systemd/system/kubelet.service.d/10-kubeadm.conf\n")),(0,a.kt)("p",null,"The path of the directory on edge node containing static pod files can be set by the\noption ",(0,a.kt)("inlineCode",{parentName:"p"},"--pod-manifest-path"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"$ _output/bin/yurtctl convert --pod-manifest-path /etc/kubernetes/manifests\n")),(0,a.kt)("h2",{id:"revertuninstall-openyurt"},"Revert/Uninstall OpenYurt"),(0,a.kt)("p",null,"Using ",(0,a.kt)("inlineCode",{parentName:"p"},"yurtctl")," to revert an OpenYurt cluster can be done by doing the following:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"$ _output/bin/yurtctl revert\nrevert.go:100] label alibabacloud.com/is-edge-worker is removed\nrevert.go:110] yurt controller manager is removed\nrevert.go:124] ServiceAccount node-controller is created\nutil.go:137] servant job(yurtctl-servant-revert-minikube-m02) has succeeded\nrevert.go:133] yurt-hub is removed, kubelet service is reset\n")),(0,a.kt)("p",null,"Note that before performing the uninstall, please make sure all edge nodes are reachable from the apiserver."),(0,a.kt)("p",null,"In addition, the path of the kubelet service configuration can be set by the option ",(0,a.kt)("inlineCode",{parentName:"p"},"--kubeadm-conf-path"),",\nand the path of the directory on edge node containing static pod files can be set by the option ",(0,a.kt)("inlineCode",{parentName:"p"},"--pod-manifest-path"),"."),(0,a.kt)("h2",{id:"subcommand"},"Subcommand"),(0,a.kt)("h3",{id:"convert-a-kubernetes-node-to-yurt-edge-node"},"Convert a Kubernetes node to Yurt edge node"),(0,a.kt)("p",null,"You can use the subcommand ",(0,a.kt)("inlineCode",{parentName:"p"},"yurtctl convert edgenode")," to convert a Kubernetes node to Yurt edge node separately."),(0,a.kt)("p",null,"This command can convert the node locally or remotely. One or more nodes that need to be converted can be specified\nby the option ",(0,a.kt)("inlineCode",{parentName:"p"},"--edge-nodes"),". If this option is not used, the local node will be converted."),(0,a.kt)("p",null,"Convert the Kubernetes node n80 to an Yurt edge node:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"$ _output/bin/yurtctl convert edgenode --edge-nodes n80\nI0209 11:03:30.101308   13729 edgenode.go:251] mark n80 as the edge-node\nI0209 11:03:30.136313   13729 edgenode.go:279] setting up yurthub on node\nI0209 11:03:30.137013   13729 edgenode.go:294] setting up yurthub apiserver addr\nI0209 11:03:30.137500   13729 edgenode.go:311] create the /etc/kubernetes/manifests/yurt-hub.yaml\nI0209 11:03:40.140073   13729 edgenode.go:403] yurt-hub healthz is OK\nI0209 11:03:40.140555   13729 edgenode.go:330] revised kubeconfig /var/lib/openyurt/kubelet.conf is generated\nI0209 11:03:40.141592   13729 edgenode.go:351] kubelet.service drop-in file is revised\nI0209 11:03:40.141634   13729 edgenode.go:354] systemctl daemon-reload\nI0209 11:03:40.403453   13729 edgenode.go:359] systemctl restart kubelet\nI0209 11:03:40.469911   13729 edgenode.go:364] kubelet has been restarted\n")),(0,a.kt)("p",null,"You can verify this by inspecting its labels and getting the status of pod yurt-hub."),(0,a.kt)("h3",{id:"revert-an-yurt-edge-node-to-kubernetes-node"},"Revert an Yurt edge node to Kubernetes node"),(0,a.kt)("p",null,"The subcommand ",(0,a.kt)("inlineCode",{parentName:"p"},"yurtctl revert edgenode")," can revert a Yurt edge node. The option ",(0,a.kt)("inlineCode",{parentName:"p"},"--edge-nodes")," of command can be used\nto specify one or more nodes to be reverted which is the same as the ",(0,a.kt)("inlineCode",{parentName:"p"},"yurtctl convert edgenode"),"."),(0,a.kt)("p",null,"Assume that the cluster is an OpenYurt cluster and has an Yurt edge node n80:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"$ kubectl describe node n80 | grep Labels\nLabels:             openyurt.io/is-edge-worker=true\n$ kubectl get pod -A | grep yurt-hub\nkube-system   yurt-hub-n80               1/1     Running   0          7m32s\n")),(0,a.kt)("p",null,"Using ",(0,a.kt)("inlineCode",{parentName:"p"},"yurtctl revert edgenode")," to revert:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"$ _output/bin/yurtctl revert edgenode --edge-nodes n80\nI0209 11:01:46.837812   12217 edgenode.go:225] label alibabacloud.com/is-edge-worker is removed\nI0209 11:01:46.838454   12217 edgenode.go:252] found backup file /etc/systemd/system/kubelet.service.d/10-kubeadm.conf.bk, will use it to revert the node\nI0209 11:01:46.838689   12217 edgenode.go:259] systemctl daemon-reload\nI0209 11:01:47.085554   12217 edgenode.go:265] systemctl restart kubelet\nI0209 11:01:47.153388   12217 edgenode.go:270] kubelet has been reset back to default\nI0209 11:01:47.153680   12217 edgenode.go:282] yurt-hub has been removed\n")),(0,a.kt)("p",null,"You can verify this by inspecting its labels and getting the status of pod yurt-hub."),(0,a.kt)("h2",{id:"troubleshooting"},"Troubleshooting"),(0,a.kt)("h3",{id:"1-failure-due-to-pulling-image-timeout"},"1. Failure due to pulling image timeout"),(0,a.kt)("p",null,"The default timeout value of cluster conversion is 2 minutes. Sometimes pulling the related images\nmight take more than 2 minutes. To avoid the conversion failure due to pulling images timeout, you can:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"use mirrored image from aliyun container registry(ACR)")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"$ _output/bin/yurtctl convert --provider minikube \\\n  --yurt-controller-manager-image registry.cn-hangzhou.aliyuncs.com/openyurt/yurt-controller-manager:latest \\\n  --yurt-tunnel-agent-image registry.cn-hangzhou.aliyuncs.com/openyurt/yurt-tunnel-agent:latest \\\n  --yurt-tunnel-server-image registry.cn-hangzhou.aliyuncs.com/openyurt/yurt-tunnel-server:latest \\\n  --yurtctl-servant-image registry.cn-hangzhou.aliyuncs.com/openyurt/yurtctl-servant:latest \\\n  --yurthub-image registry.cn-hangzhou.aliyuncs.com/openyurt/yurthub:latest\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"or pull all images on the node manually\nor use automation tools such as ",(0,a.kt)("inlineCode",{parentName:"li"},"broadcastjob"),"(from ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/openkruise/kruise/blob/master/docs/tutorial/broadcastjob.md"},"Kruise"),") in advance.")),(0,a.kt)("h3",{id:"2-adhoc-failure-recovery"},"2. Adhoc failure recovery"),(0,a.kt)("p",null,"In case any adhoc failure makes the Kubelet fail to communicate with APIServer, one can recover the original Kubelet setup by\nrunning the following command in edge node directly:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'$ sudo sed -i "s|--kubeconfig=.*kubelet.conf|--kubeconfig=/etc/kubernetes/kubelet.conf|g;" /etc/systemd/system/kubelet.service.d/10-kubeadm.conf && sudo systemctl daemon-reload && sudo systemctl restart kubelet.service\n')))}p.isMDXComponent=!0}}]);