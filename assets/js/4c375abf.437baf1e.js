"use strict";(self.webpackChunkopenyurt_io=self.webpackChunkopenyurt_io||[]).push([[3360],{3905:function(e,t,n){n.d(t,{Zo:function(){return i},kt:function(){return m}});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},i=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,l=e.originalType,s=e.parentName,i=p(e,["components","mdxType","originalType","parentName"]),c=u(n),m=o,g=c["".concat(s,".").concat(m)]||c[m]||d[m]||l;return n?a.createElement(g,r(r({ref:t},i),{},{components:n})):a.createElement(g,r({ref:t},i))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=n.length,r=new Array(l);r[0]=c;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:o,r[1]=p;for(var u=2;u<l;u++)r[u]=n[u];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},6342:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return p},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return i},default:function(){return c}});var a=n(7462),o=n(3366),l=(n(7294),n(3905)),r=["components"],p={title:"Yurt App Manager"},s=void 0,u={unversionedId:"best-practices/yurt-app-manager",id:"best-practices/yurt-app-manager",isDocsHomePage:!1,title:"Yurt App Manager",description:"In this tutorial, we will show how the yurt-app-manager helps users manage",source:"@site/docs/best-practices/yurt-app-manager.md",sourceDirName:"best-practices",slug:"/best-practices/yurt-app-manager",permalink:"/docs/best-practices/yurt-app-manager",editUrl:"https://github.com/openyurtio/openyurt.io/edit/master/docs/best-practices/yurt-app-manager.md",tags:[],version:"current",lastUpdatedBy:"Peeknut",lastUpdatedAt:1637131172,formattedLastUpdatedAt:"11/17/2021",frontMatter:{title:"Yurt App Manager"},sidebar:"docs",previous:{title:"Architecture",permalink:"/docs/core-concepts/architecture"},next:{title:"Yurt tunnel",permalink:"/docs/best-practices/yurt-tunnel"}},i=[{value:"Install yurt-app-manager",id:"install-yurt-app-manager",children:[{value:"1. install yurt-app-manager operator",id:"1-install-yurt-app-manager-operator",children:[],level:3}],level:2},{value:"How to Use",id:"how-to-use",children:[{value:"NodePool",id:"nodepool",children:[],level:3},{value:"UnitedDeployment",id:"uniteddeployment",children:[],level:3}],level:2}],d={toc:i};function c(e){var t=e.components,n=(0,o.Z)(e,r);return(0,l.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"In this tutorial, we will show how the yurt-app-manager helps users manage\nthere edge nodes and workload.\nSuppose you have a Kubernetes cluster in an Openyurt environment, or a native Kubernetes cluster with at least two nodes."),(0,l.kt)("h2",{id:"install-yurt-app-manager"},"Install yurt-app-manager"),(0,l.kt)("h3",{id:"1-install-yurt-app-manager-operator"},"1. install yurt-app-manager operator"),(0,l.kt)("p",null,"Go to OpenYurt root directory:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"$ cd $GOPATH/src/github.com/openyurtio/openyurt\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl apply -f config/yurt-app-manager/release/yurt-app-manager-v0.3.0.yaml\n")),(0,l.kt)("p",null,"Wait for the yurt-app-manager operator  to be created successfully"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get pod -n kube-system |grep yurt-app-manager\n")),(0,l.kt)("h2",{id:"how-to-use"},"How to Use"),(0,l.kt)("p",null,"The Examples of NodePool and UnitedDeployment are in ",(0,l.kt)("inlineCode",{parentName:"p"},"config/yurt-app-manager/samples/")," directory"),(0,l.kt)("h3",{id:"nodepool"},"NodePool"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"1 create an nodepool")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"cat <<EOF | kubectl apply -f -\napiVersion: apps.openyurt.io/v1alpha1\nkind: NodePool\nmetadata:\n  name: Pool-A\nspec:\n  type: Edge\n  annotations:\n    apps.openyurt.io/example: test-Pool-A\n  labels:\n    apps.openyurt.io/example: test-Pool-A\n  taints:\n  - key: apps.openyurt.io/example\n    value: test-Pool-A\n    effect: NoSchedule\nEOF\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"2 Get NodePool")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"$ kubectl get np Pool-A\n\nNAME       TYPE   READYNODES   NOTREADYNODES   AGE\nPool-A     Edge                                28s\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"3 Add Node To NodePool")),(0,l.kt)("p",null,"Add an node into ",(0,l.kt)("inlineCode",{parentName:"p"},"Pool-A")," NodePool, Set the ",(0,l.kt)("inlineCode",{parentName:"p"},"apps.openyurt.io/desired-nodepool")," label on the host, and value is the name of the Pool-A NodePool"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"$ kubectl label node {Your_Node_Name} apps.openyurt.io/desired-nodepool=Pool-A\n\n{Your_Node_Name} labeled\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"$ kubectl get np Pool-A\nNAME       TYPE   READYNODES   NOTREADYNODES   AGE\nPool-A     Edge   1            0               5m19s\n")),(0,l.kt)("p",null,"Once a Node adds a NodePool, it inherits the annotations, labels, and taints defined in the nodepool Spec,at the same time, the Node will add a new tag: ",(0,l.kt)("inlineCode",{parentName:"p"},"apps.openyurt.io/nodepool"),". For Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"$ kubectl get node {Your_Node_Name} -o yaml\n\napiVersion: v1\nkind: Node\nmetadata:\n  annotations:\n    apps.openyurt.io/example: test-Pool-A\n  labels:\n    apps.openyurt.io/desired-nodepool: Pool-A\n    apps.openyurt.io/example: test-Pool-A\n    apps.openyurt.io/nodepool: Pool-A\nspec:\n  taints:\n  - effect: NoSchedule\n    key: apps.openyurt.io/example\n    value: test-Pool-A\nstatus:\n***\n")),(0,l.kt)("h3",{id:"uniteddeployment"},"UnitedDeployment"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"1 create an uniteddeployment which use deployment template")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'cat <<EOF | kubectl apply -f -\napiVersion: apps.openyurt.io/v1alpha1\nkind: UnitedDeployment\nmetadata:\n  labels:\n    controller-tools.k8s.io: "1.0"\n  name: ud-test\nspec:\n  selector:\n    matchLabels:\n      app: ud-test\n  workloadTemplate:\n    deploymentTemplate:\n      metadata:\n        labels:\n          app: ud-test\n      spec:\n        template:\n          metadata:\n            labels:\n              app: ud-test\n          spec:\n            containers:\n              - name: nginx\n                image: nginx:1.19.1\n  topology:\n    pools:\n    - name: edge\n      nodeSelectorTerm:\n        matchExpressions:\n        - key: apps.openyurt.io/nodepool\n          operator: In\n          values:\n          - Pool-A\n      replicas: 3\n      tolerations:\n      - effect: NoSchedule\n        key: apps.openyurt.io/example\n        operator: Exists\n  revisionHistoryLimit: 5\nEOF\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"2 Get UnitedDeployment")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"$ kubectl get ud\nNAME      READY   WORKLOADTEMPLATE   AGE\nud-test   1       Deployment         23s\n")),(0,l.kt)("p",null,"check the sub deployment created by yurt-app-manager controller"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"$ kubectl get deploy\nNAME                 READY   UP-TO-DATE   AVAILABLE   AGE\nud-test-edge-ttthd   1/1     1            1           100s\n")),(0,l.kt)("p",null,"check the pod created by UnitedeDeployment , and you will find that these pods will be created on all the hosts under the ",(0,l.kt)("inlineCode",{parentName:"p"},"Pool-A")," NodePool,  and all the pods created by UnitedDeployment use the same image: ",(0,l.kt)("inlineCode",{parentName:"p"},"nginx:1.19.1")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"$ kubectl get pod -l app=ud-test\n\nNAME                                  READY   STATUS    RESTARTS   AGE\nud-test-edge-ttthd-5db8f454dd-8jd4l   1/1     Running   0          7m\nud-test-edge-ttthd-5db8f454dd-ggmfb   1/1     Running   0          34s\nud-test-edge-ttthd-5db8f454dd-r6ptr   1/1     Running   0          34s\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"3 Change UnitedDeployment workloadTemplate's image\nchange image from ",(0,l.kt)("inlineCode",{parentName:"li"},"nginx:1.19.1")," to ",(0,l.kt)("inlineCode",{parentName:"li"},"nginx:1.19.3"),", and you will find that all pods created by UnitedDeployment use the same image:",(0,l.kt)("inlineCode",{parentName:"li"},"nginx:1.19.3"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'kubectl patch ud ud-test --type=\'json\' -p \'[{"op": "replace", "path": "/spec/workloadTemplate/deploymentTemplate/spec/template/spec/containers/0/image", "value": "nginx:1.19.3"}]\'\nkubectl get pod -l app=ud-test\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"4 Scale the number of pods under a node pool")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'$ kubectl patch ud ud-test --type=\'json\' -p \'[{"op": "replace", "path": "/spec/topology/pools/0/replicas", "value": 6}]\'\n')),(0,l.kt)("p",null,"You will find that the number of pods will be expanded to six"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"$ kubectl get pod -l app=ud-test\nNAME                                  READY   STATUS    RESTARTS   AGE\nud-test-edge-ttthd-5bbb4b8664-2f5ss   1/1     Running   0          10m\nud-test-edge-ttthd-5bbb4b8664-8sjs7   1/1     Running   0          3m20s\nud-test-edge-ttthd-5bbb4b8664-99dml   1/1     Running   0          10m\nud-test-edge-ttthd-5bbb4b8664-dvb8s   1/1     Running   0          10m\nud-test-edge-ttthd-5bbb4b8664-lxhgr   1/1     Running   0          3m20s\nud-test-edge-ttthd-5bbb4b8664-zj8ls   1/1     Running   0          3m20s\n")))}c.isMDXComponent=!0}}]);